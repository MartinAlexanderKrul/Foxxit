@using Foxxit.Models.ViewModels
@using Foxxit.Extensions
@model MainPageViewModel

<div class="side_bar_header"><h3>Trending SubReddits</h3></div>

@foreach (var subReddit in Model.SubReddits.Where(s => s.Posts.Count() > 1).OrderByDescending(s => s.Posts.Count()).Take(10))
{
    <div class="side_bar">
        <div class="side_bar_left">
            <p>
                <a href="/SubReddit?subRedditId=@subReddit.Id">
                    @(subReddit.Name.Contains(" ") || subReddit.Name.Length < 12 ? subReddit.Name.ToSubReddit() : subReddit.Name.Insert(subReddit.Name.Length/2, " ").ToSubReddit())
                </a>
            </p>
        </div>

        <div class="side_bar_right">
            @if (!subReddit.Members.Any(member => member.UserId == Model.CurrentUser.Id))
            {
                <div class="not_button">@Html.ActionLink("JOIN", "Join", "Foxxit", new { subRedditId = subReddit.Id })</div>
            }
            else
            {
                <div class="not_button light_button">@Html.ActionLink("LEAVE", "Unfollow", "Foxxit", new { subRedditId = subReddit.Id })</div>
            }
        </div>
    </div>
}

<div class="subreddit_end not_button">
    <a href="/subreddit/new/">NEW SUBREDDIT</a>
</div>