@using Foxxit.Extensions
@using Foxxit.Models.Entities
@model PostBase
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@if (Model.Comments is not null)
{
    @foreach (var comment in Model.Comments)
    {
        <div class="comment_section">

            <div classs="comment_left">
                <div class="post_vote">
                    <form asp-action="Vote" asp-controller="Comment">
                        <input type="hidden" value="1" name="value" />
                        <input type="hidden" value="@comment.Id" name="postBaseId" />
                        <button type="submit"><i class="fa fa-chevron-up fa-lg"></i></button>
                    </form>
                </div>
                <div class="post_vote">
                    <form asp-action="Vote" asp-controller="Comment">
                        <input type="hidden" value="-1" name="value" />
                        <input type="hidden" value="@comment.Id" name="postBaseId" />
                        <button type="submit"><i class="fa fa-chevron-down fa-lg"></i></button>
                    </form>
                </div>
            </div>
            <div class="comment_right">
                <div class="comment_right_header">
                    <p class="comment_info">@comment.User.UserName ● @comment.Votes.Count() points ● @comment.TimeStamp() ago</p>
                </div>
                <div class="comment_right_content">
                    <p style="margin-bottom: 1%">@comment.Text</p>
                    <div class="article_section">
                        @*<div class="comment_number">
                                <i class="fa fa-comment"></i>
                                <a class="comment_number" asp-action="NewComment" asp-controller="Foxxit" asp-route-commentId="@comment.Id">REPLY</a>
                            </div> TODO: Set the route by the actual endpoint
                            <div class="addcomment" id="addcomment">
                                    @await Html.PartialAsync("_AddCommentViewPartial", Model)
                                </div>*@
                    </div>
                </div>
            </div>
        </div>

        @if (comment.Comments.Any())
        {

            @foreach (var subComment in comment.Comments)
            {

                <div class="comment_section sublevel">

                    <div classs="comment_left">
                        <div class="post_vote">
                            <form asp-action="Vote" asp-controller="Comment">
                                <input type="hidden" value="1" name="value" />
                                <input type="hidden" value="@subComment.Id" name="postBaseId" />
                                <button type="submit"><i class="fa fa-chevron-up fa-lg"></i></button>
                            </form>
                        </div>
                        <div class="post_vote">
                            <form asp-action="Vote" asp-controller="Comment">
                                <input type="hidden" value="-1" name="value" />
                                <input type="hidden" value="@subComment.Id" name="postBaseId" />
                                <button type="submit"><i class="fa fa-chevron-down fa-lg"></i></button>
                            </form>
                        </div>
                    </div>
                    <div class="comment_right">
                        <div class="comment_right_header">
                            <p class="comment_info">@subComment.User.UserName ● @subComment.Votes.Count() points ● @subComment.TimeStamp() ago</p>
                        </div>
                        <div class="comment_right_content">
                            <p>@subComment.Text</p>
                        </div>
                    </div>
                </div>
            }

        }
    }
}

<br />
@await Html.PartialAsync("_AddCommentViewPartial", Model)