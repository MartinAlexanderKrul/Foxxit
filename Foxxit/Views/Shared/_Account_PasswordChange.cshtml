@using Foxxit.Models.ViewModels
@model PasswordChangeViewModel

<article>
    <h2>Password Change</h2>
</article>

@if (Html.ViewData.ModelState.Where(x => x.Key.Equals(String.Empty)).Count() > 0)
{
    <article>
        @Html.ValidationSummary(true, null, new { @class = "validation_summary" })
    </article>
}

<article>

    @using (Html.BeginForm("PasswordChange", "Account", FormMethod.Post))
    {
        <span>
            @Html.PasswordFor(m => m.NewPassword, new { @class = "login_field", @placeholder = "new password" })
        </span>

        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.NewPassword, null)
        </span>

        <span>
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "login_field", @placeholder = "confirm new password" })
        </span>

        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.ConfirmPassword, null)
            <br>
        </span>

        <span>
            @Html.PasswordFor(m => m.CurrentPassword, new { @class = "login_field", @placeholder = "current password" })
        </span>

        <span class="text-danger">
            @Html.ValidationMessageFor(m => m.CurrentPassword, null)
            <br>
        </span>

        <button class="not_button biggest_button" type="submit" value="CHANGE">CHANGE</button>
    }
</article>