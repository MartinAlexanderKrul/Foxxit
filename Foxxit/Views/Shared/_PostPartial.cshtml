@using Foxxit.Extensions
@using Foxxit.Models.ViewModels
@model PostViewModel

<article>

    <div class="article_left">
        <div class="post_vote">
            <form asp-action="Vote" asp-controller="Home">
                <input type="hidden" value="1" name="value" />
                <input type="hidden" value="@Model.Post.Id" name="postBaseId" />
                <button type="submit"><i class="fa fa-chevron-up fa-lg"></i></button>
            </form>
        </div>
        <div class="post_vote">@Model.Post.Votes.Count()</div>

        <div class="post_vote">
            <form asp-action="Vote" asp-controller="Home">
                <input type="hidden" value="-1" name="value" />
                <input type="hidden" value="@Model.Post.Id" name="postBaseId" />
                <button type="submit"><i class="fa fa-chevron-down fa-lg"></i></button>
            </form>
        </div>
    </div>

    <div class="article_middle">
        <div class="article_header">
            <div class="article_text">
                <h4><a href="/post/@Model.Post.Id">@Model.Post.Title</a></h4>
                <p class="article_text_info">Posted by @Model.Post.User.UserName @Model.Post.TimeStamp() ago in <a href="/subreddit?subRedditId=@Model.Post.SubReddit.Id">@Model.Post.SubReddit.Name</a></p>
            </div>
            @if (Model.ShouldShowButton && !Model.Post.SubReddit.Members.Any(s => s.UserId == Model.CurrentUser.Id))
            {
                <div class="not_button">@Html.ActionLink("JOIN", "Join", "Foxxit", new { subRedditId = Model.Post.SubRedditId })</div>
            }
        </div>

        <div class="article_content">
            @await Html.PartialAsync("_PostPartial_Content", Model.Post)
        </div>

        <div class="article_footer">
            <div class="article_section">
                <div class="comment_number">
                    <a href="/post/@Model.Post.Id">
                        <i class="fa fa-comment fa-lg load-comments"></i>
                        @Model.Post.NumOfComments() COMMENTS
                    </a>
                </div>
            </div>

            @if (Model.ShouldLoadComments)
            {
                <div class="comment_container">
                    @await Html.PartialAsync("_CommentViewPartial", Model.Post)
                </div>
            }
        </div>
    </div>

    <div class="article_right">
    </div>
</article>