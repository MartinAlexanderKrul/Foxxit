@using Foxxit.Extensions
@using Foxxit.Models.ViewModels
@model PostViewModel

<div class="section_intro_main">
    <h2>Welcome to Foxxit</h2>
    <div class="section_intro_buttons">
        <div class="not_button section_intro_button">@Html.ActionLink("HOT", "ListHotTopics", "Home")</div>
        <div class="not_button section_intro_button">@Html.ActionLink("NEW", "ListNewTopics", "Home")</div>
        <div class="not_button section_intro_button">@Html.ActionLink("TOP", "ListTopTopics", "Home")</div>
    </div>
</div>
<article>

    <div class="article_left">
        <div class="post_vote">
            <form asp-action="Vote" asp-controller="Home">
                <input type="hidden" value="up" name="voteType" />
                <input type="hidden" value="@Model.Post.Id" name="postId" />
                <button type="submit"><i class="fa fa-chevron-up fa-lg"></i></button>
            </form>
        </div>
        <div class="post_vote">@Model.Post.Votes.Count()</div>

        <div class="post_vote">
            <form asp-action="Vote" asp-controller="Home">
                <input type="hidden" value="down" name="voteType" />
                <input type="hidden" value="@Model.Post.Id" name="postId" />
                <button type="submit"><i class="fa fa-chevron-down fa-lg"></i></button>
            </form>
        </div>
    </div>

    <div class="article_middle">
        <div class="article_header">
            <div class="article_text">
                <h4>@Model.Post.Title</h4>
                <p class="article_text_info">Posted by @Model.Post.User.UserName @Model.Post.TimeStamp() ago in @Model.Post.SubReddit.Name</p>
            </div>
            <div class="not_button">@Html.ActionLink("JOIN", "JoinSubReddit", "Foxxit", new { subRedditId = Model.Post.SubRedditId })</div>
        </div>

        <div class="article_content">
            @if (!String.IsNullOrEmpty(Model.Post.ImageURL))
            {
                <img style="width: 100%" src="@Model.Post.ImageURL" alt="@Model.Post.Title" />
            }
            else
            {
                <p>@Model.Post.Text</p>
            }
        </div>

        <div class="article_footer">
            <div class="article_section">
                <div class="comment_number">
                    <i class="fa fa-comment fa-lg load-comments"></i>
                    @Model.Post.Comments.Count() COMMENTS
                </div>
            </div>

            <div class="comment_container">
                @await Html.PartialAsync("_CommentViewPartial", Model.Post)
            </div>
        </div>
    </div>

    <div class="article_right">
    </div>
</article>