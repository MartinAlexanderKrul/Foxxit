@using Foxxit.Models.DTO;

@model PaginatedList<Foxxit.Models.Entities.Post>

@{ var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    int pageNumsAmount = 3; }

<a asp-action="PaginationTest" asp-route-pageNum="1" class="btn btn-default">FIRST</a>
<a asp-action="PaginationTest" asp-route-pageNum="@(Model.CurrentPage - 1)" class="btn btn-default @prevDisabled">PREV</a>

@for (int i = (Model.CurrentPage - pageNumsAmount); i <= (Model.CurrentPage + pageNumsAmount); i++)
{
    if (Model.CurrentPage == i)
    {
        <a asp-action="PaginationTest" asp-route-pageNum="@Model.CurrentPage" class="btn btn-dark @prevDisabled @nextDisabled">current: @Model.CurrentPage</a> 
    }
    else
    {
        if (i > 0 || i <= Model.TotalPages)
    {
        <a asp-action="PaginationTest" asp-route-pageNum="@i" class="btn btn-default @prevDisabled @nextDisabled">@i</a>}
    }
}

<a asp-action="PaginationTest" asp-route-pageNum="@(Model.CurrentPage + 1)" class="btn btn-default @nextDisabled">NEXT</a>
<a asp-action="PaginationTest" asp-route-pageNum="@(Model.TotalPages)" class="btn btn-default">LAST</a>